@inherits LayoutComponentBase
@using Simple_Ecommerce_Web_app.Services
@inject AuthService AuthService
@inject CartService CartService
@inject NavigationManager Navigation
@implements IDisposable

<div class="page">
    <header class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container position-relative">
            <a class="navbar-brand fw-bold" href="/">
                <i class="fas fa-tshirt me-2"></i>DRESSHY
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/products">Products</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/categories">Categories</a>
                    </li>
                </ul>
                
                <div class="navbar-nav">
                    <div class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="fas fa-search"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end p-3" style="min-width: 300px;">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search products...">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <CartBadge />
                    
                    @if (AuthService.IsAuthenticated)
                    {
                        <UserDropdown />
                    }
                    else
                    {
                        <a class="nav-link" href="/login">
                            <i class="fas fa-sign-in-alt me-1"></i>Login
                        </a>
                    }
                </div>
            </div>
        </div>
    </header>

    <main class="main-content">
        @Body
    </main> 

    <footer class="bg-dark text-light py-5 mt-5">
        <div class="container">
            <div class="row">
                <div class="col-md-4 mb-4">
                    <h5 class="fw-bold">
                        <i class="fas fa-tshirt me-2"></i>DRESSHY
                    </h5>
                    <p class="text-muted">Your premier destination for fashion-forward clothing and accessories.</p>
                    <div class="social-links">
                        <a href="#" class="text-light me-3"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="text-light me-3"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-light me-3"><i class="fab fa-twitter"></i></a>
                    </div>
                </div>
                <div class="col-md-2 mb-4">
                    <h6 class="fw-bold">Shop</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-muted text-decoration-none">Women</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Men</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Accessories</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Sale</a></li>
                    </ul>
                </div>
                <div class="col-md-2 mb-4">
                    <h6 class="fw-bold">Support</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-muted text-decoration-none">Contact Us</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Size Guide</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">Returns</a></li>
                        <li><a href="#" class="text-muted text-decoration-none">FAQ</a></li>
                    </ul>
                </div>
                <div class="col-md-4 mb-4">
                    <h6 class="fw-bold">Newsletter</h6>
                    <p class="text-muted">Subscribe to get updates on new arrivals and exclusive offers.</p>
                    <div class="input-group">
                        <input type="email" class="form-control" placeholder="Enter your email">
                        <button class="btn btn-primary" type="button">Subscribe</button>
                    </div>
                </div>
            </div>
            <hr class="my-4">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <p class="text-muted mb-0">&copy; 2024 DRESSHY. All rights reserved.</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <i class="fab fa-cc-visa fa-2x text-muted me-2"></i>
                    <i class="fab fa-cc-mastercard fa-2x text-muted me-2"></i>
                    <i class="fab fa-cc-paypal fa-2x text-muted"></i>
                </div>
            </div>
        </div>
    </footer>
</div>

<div id="blazor-error-ui">
    An error has occurred. This application may no longer respond until reloaded.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;

    protected override void OnInitialized()
    {
        CartService.OnCartChanged += OnCartUpdated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await Task.Delay(100); // Wait for JS to load
                var count = await JSRuntime.InvokeAsync<int>("cartManager.getCartCount");
                CartService.SetCartCount(count);
            }
            catch
            {
                CartService.SetCartCount(0);
            }
        }
    }

    private void OnCartUpdated()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        CartService.OnCartChanged -= OnCartUpdated;
    }
}
