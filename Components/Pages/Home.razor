@page "/"
@rendermode InteractiveServer
@inject AuthService AuthService
@inject CartService CartService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject ProductService ProductService

<PageTitle>DRESSHY - Fashion Forward Clothing</PageTitle>

@if (AuthService.IsAuthenticated && AuthService.IsAdmin)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h5 class="alert-heading mb-2">
                        <i class="bi bi-shield-check me-2"></i>Admin Dashboard
                    </h5>
                    <p class="mb-0">You're logged in as an administrator. Quick access to management tools:</p>
                </div>
                <div class="col-md-4 text-md-end mt-3 mt-md-0">
                    <a href="/admin/products" class="btn btn-primary btn-sm me-2">
                        <i class="bi bi-box-seam me-1"></i>Manage Products
                    </a>
                    <a href="/admin/categories" class="btn btn-success btn-sm">
                        <i class="bi bi-tags-fill me-1"></i>Manage Categories
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<!-- Hero Section -->
<section class="hero-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <h1 class="hero-title">Welcome to DRESSHY</h1>
                <p class="hero-subtitle">Discover the latest trends in fashion with our curated collection of premium clothing and accessories</p>
                <div class="d-flex gap-3 justify-content-center flex-wrap">
                    <a href="/products" class="btn btn-primary btn-lg">Shop Now</a>
                    <a href="/categories" class="btn btn-outline-light btn-lg">Browse Categories</a>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Featured Categories -->
<section class="py-5">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12 text-center">
                <h2 class="display-5 fw-bold mb-3">Shop by Category</h2>
                <p class="lead text-muted">Explore our diverse collection of fashion essentials</p>
            </div>
        </div>
        <div class="row g-4">
            <div class="col-md-4">
                <a href="/products?category=women" class="category-card d-block" style="background-image: url('https://images.unsplash.com/photo-1483985988355-763728e1935b?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80');">
                    <div class="category-overlay">
                        <span>Women's Fashion</span>
                    </div>
                </a>
            </div>
            <div class="col-md-4">
                <a href="/products?category=men" class="category-card d-block" style="background-image: url('https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80');">
                    <div class="category-overlay">
                        <span>Men's Fashion</span>
                    </div>
                </a>
            </div>
            <div class="col-md-4">
                <a href="/products?category=accessories" class="category-card d-block" style="background-image: url('https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80');">
                    <div class="category-overlay">
                        <span>Accessories</span>
                    </div>
                </a>
            </div>
        </div>
    </div>
</section>

<!-- Featured Products -->
<section class="py-5 bg-light">
    <div class="container">
        <div class="row mb-5">
            <div class="col-12 text-center">
                <h2 class="display-5 fw-bold mb-3">Featured Products</h2>
                <p class="lead text-muted">Handpicked items from our latest collection</p>
            </div>
        </div>
        <div class="row g-4">
            @foreach (var product in featuredProducts)
            {
                <div class="col-lg-3 col-md-6">
                    <div class="card product-card h-100">
                        @if (product.IsOnSale)
                        {
                            <div class="badge-sale">SALE</div>
                        }
                        @if (product.IsNew)
                        {
                            <div class="badge-new">NEW</div>
                        }
                        <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">@product.Name</h5>
                            <p class="card-text text-muted flex-grow-1">@product.Description</p>
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <div>
                                    @if (product.IsOnSale)
                                    {
                                        <span class="product-original-price">$@product.OriginalPrice.ToString("F2")</span>
                                    }
                                    <span class="product-price">$@product.Price.ToString("F2")</span>
                                </div>
                                <button class="btn btn-primary btn-sm" @onclick="() => AddToCart(product.Id)">
                                    <i class="fas fa-cart-plus me-1"></i>Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="row mt-5">
            <div class="col-12 text-center">
                <a href="/products" class="btn btn-outline-primary btn-lg">View All Products</a>
            </div>
        </div>
    </div>
</section>

<!-- Newsletter Section -->
<section class="py-5" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mx-auto text-center text-white">
                <h3 class="fw-bold mb-3">Stay in Style</h3>
                <p class="mb-4">Subscribe to our newsletter and be the first to know about new arrivals, exclusive offers, and fashion tips.</p>
                <div class="row g-2">
                    <div class="col-md-8">
                        <input type="email" class="form-control form-control-lg" placeholder="Enter your email address" @bind="newsletterEmail">
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-light btn-lg w-100" @onclick="SubscribeNewsletter">
                            Subscribe
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private string newsletterEmail = "";
    private List<Models.Product> featuredProducts = new();

    protected override async Task OnInitializedAsync()
    {
        var allProducts = await ProductService.GetAllProductsAsync();
        featuredProducts = allProducts.Take(8).ToList();
    }

    private async Task AddToCart(int productId)
    {
        var product = featuredProducts.FirstOrDefault(p => p.Id == productId);
        if (product != null)
        {
            try
            {
                // Show confirmation dialog
                var confirmed = await JSRuntime.InvokeAsync<bool>("confirmDialog", 
                    $"Are you sure you want to add '{product.Name}' to your cart?");
                
                if (!confirmed)
                {
                    return;
                }
                
                var cartProduct = new
                {
                    id = product.Id,
                    name = product.Name,
                    description = product.Description,
                    price = (double)product.Price,
                    originalPrice = (double)product.OriginalPrice,
                    imageUrl = product.ImageUrl,
                    isOnSale = product.IsOnSale,
                    category = "featured",
                    stock = 100
                };
                
                // Call JavaScript directly to add to cart
                await JSRuntime.InvokeAsync<int>("cartManager.addToCart", cartProduct);
                
                // Get the actual cart item count (total quantity)
                var count = await JSRuntime.InvokeAsync<int>("cartManager.getCartCount");
                
                // Notify CartService to update the badge
                CartService.NotifyCartChanged(count);
                
                Console.WriteLine($"Product added to cart. New count: {count}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error adding to cart: {ex.Message}");
            }
        }
    }

    private void SubscribeNewsletter()
    {
        if (!string.IsNullOrWhiteSpace(newsletterEmail))
        {
            // TODO: Implement newsletter subscription
            Console.WriteLine($"Subscribed email: {newsletterEmail}");
            newsletterEmail = "";
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Description { get; set; } = "";
        public decimal Price { get; set; }
        public decimal OriginalPrice { get; set; }
        public string ImageUrl { get; set; } = "";
        public bool IsOnSale { get; set; }
        public bool IsNew { get; set; }
    }
}
