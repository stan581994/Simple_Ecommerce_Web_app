// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Simple_Ecommerce_Web_app.Data;

#nullable disable

namespace Simple_Ecommerce_Web_app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251010000456_AddProductCategoryInventoryTables")]
    partial class AddProductCategoryInventoryTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic devices and accessories",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fashion and apparel",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Books and publications",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Home improvement and garden supplies",
                            Name = "Home & Garden"
                        });
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastRestocked")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSold")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastRestocked = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 1,
                            ReorderLevel = 10,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            LastRestocked = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 2,
                            ReorderLevel = 20,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 3,
                            LastRestocked = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ProductId = 3,
                            ReorderLevel = 10,
                            StockQuantity = 5
                        });
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "High-performance laptop for work and gaming",
                            ImageUrl = "https://via.placeholder.com/300x300?text=Laptop",
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comfortable cotton t-shirt",
                            ImageUrl = "https://via.placeholder.com/300x300?text=T-Shirt",
                            Name = "T-Shirt",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Learn C# programming from scratch",
                            ImageUrl = "https://via.placeholder.com/300x300?text=Book",
                            Name = "Programming Book",
                            Price = 39.99m
                        });
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanAddProducts")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanAddToCart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanEditPrices")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanViewProducts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanAddProducts = true,
                            CanAddToCart = true,
                            CanEditPrices = true,
                            CanViewProducts = true,
                            Description = "Administrator with full access",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CanAddProducts = false,
                            CanAddToCart = true,
                            CanEditPrices = false,
                            CanViewProducts = true,
                            Description = "Regular customer",
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@ecommerce.com",
                            PasswordHash = "$2a$11$G2ALInfG1J0zMPD3SDPeBeu9S5A9rPi7t1b/iHM96aTNOG/3lBpGO",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "customer@ecommerce.com",
                            PasswordHash = "$2a$11$LPfx2V16f5aWANS8aJp1deknRwBzsdAoia.TRRlzBXuQwU0Lq2N7.",
                            RoleId = 2,
                            Username = "customer"
                        });
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Inventory", b =>
                {
                    b.HasOne("Simple_Ecommerce_Web_app.Models.Product", "Product")
                        .WithOne("Inventory")
                        .HasForeignKey("Simple_Ecommerce_Web_app.Models.Inventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Product", b =>
                {
                    b.HasOne("Simple_Ecommerce_Web_app.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.User", b =>
                {
                    b.HasOne("Simple_Ecommerce_Web_app.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Product", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("Simple_Ecommerce_Web_app.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
